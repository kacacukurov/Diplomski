import rs.uns.ac.ftn.Diplomski.model.Wine
import rs.uns.ac.ftn.Diplomski.model.Grape
import rs.uns.ac.ftn.Diplomski.model.drl.GrapeList
import rs.uns.ac.ftn.Diplomski.model.drl.PossibleWines

import java.util.List;

rule "Find wine that has all grapes"
    agenda-group "wines"
    salience 10
    when
        $wine: Wine($allGrapes: grapes, $name: wineName);
        $pb: PossibleWines();
        $gl: GrapeList($usersGrapes: grapeLists);
        $userGrapesIDS: List() from accumulate (
            Grape($id: id) from $usersGrapes, collectList($id)
        )
        chechWineGrapes($num, $allGrapes, $userGrapesIDS;);
    then
        $pb.getWines().add($wine);
end

query chechWineGrapes(Number $num, List allGrapes, List userGrapesIds)
    $num := Number(intValue == allGrapes.size()) from accumulate(
        Grape($id: id, id memberOf userGrapesIds) from allGrapes,
        init(int count = 0;),
        action(count += 1;),
        result(count)
    )
end