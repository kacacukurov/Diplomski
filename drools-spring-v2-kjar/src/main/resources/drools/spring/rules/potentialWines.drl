import rs.uns.ac.ftn.Diplomski.model.Wine
import rs.uns.ac.ftn.Diplomski.model.Grape
import rs.uns.ac.ftn.Diplomski.model.drl.GrapeList
import rs.uns.ac.ftn.Diplomski.service.WineService
import rs.uns.ac.ftn.Diplomski.web.dto.GrapeListDTO
import rs.uns.ac.ftn.Diplomski.web.dto.GrapeDTO
import rs.uns.ac.ftn.Diplomski.web.dto.PotentialWinesDTO
import rs.uns.ac.ftn.Diplomski.web.dto.MissingGrapesDTO
import rs.uns.ac.ftn.Diplomski.web.dto.WineDTO

import java.util.List;

// WINE TO BE POTENTIAL HAS TO HAVE AT LEAST ONE GRAPE
rule "Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience 10
    when
        $cdp: Wine(wineName == "Chateauneuf-du-pape");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Grenache" || grapeName == "Syrah" || grapeName == "Mourvedre" || grapeName == "Vaccarese" ||
            grapeName == "Bourboulenc" || grapeName == "Cinsault" || grapeName == "Clairette Blanche" || grapeName == "Counoise"
            || grapeName == "Grenache Blanc" || grapeName == "Muscardin" || grapeName == "Picardan" || grapeName == "Piquepoul Blanc"
            || grapeName == "Roussanne" || grapeName == "Terret Noir")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($cdp);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Red Bordeaux"
    agenda-group "potential-wines"
    salience 10
    when
        $rb: Wine(wineName == "Red bordeaux");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Merlot" || grapeName == "Cabernet Sauvignon" || grapeName == "Cabernet Franc" ||
            grapeName == "Petit Verdot" || grapeName == "Malbec")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($rb);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential White Bordeaux"
    agenda-group "potential-wines"
    salience 10
    when
        $wb: Wine(wineName == "White bordeaux");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Semillon" || grapeName == "Sauvignon Blanc" || grapeName == "Muscadelle")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($wb);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Red bourgogne"
    agenda-group "potential-wines"
    salience 10
    when
        $rb: Wine(wineName == "Red bourgogne");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Pinot Noir" || grapeName == "Gamay")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($rb);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential White bourgogne"
    agenda-group "potential-wines"
    salience 10
    when
        $wb: Wine(wineName == "White bourgogne");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Chardonnay" || grapeName == "Aligote")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($wb);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Red rhone"
    agenda-group "potential-wines"
    salience 10
    when
        $rr: Wine(wineName == "Red rhone");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Grenache" || grapeName == "Syrah" || grapeName == "Mourvedre")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($rr);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential White rhone"
    agenda-group "potential-wines"
    salience 10
    when
        $wr: Wine(wineName == "White rhone");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Marsanne" || grapeName == "Roussanne" || grapeName == "Viognier" || grapeName == "Clairette"
            || grapeName == "Grenache Blanc" || grapeName == "Bourboulenc")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($wr);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Soave"
    agenda-group "potential-wines"
    salience 10
    when
        $soave: Wine(wineName == "Soave");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Garganega" || grapeName == "Trebbiano" || grapeName == "Chardonnay" || grapeName == "Pinot Blanc")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($soave);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Chianti"
    agenda-group "potential-wines"
    salience 10
    when
        $chianti: Wine(wineName == "Chianti");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Sangiovese" || grapeName == "Cabernet Sauvignon" || grapeName == "Cabernet Franc")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($chianti);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Super tuscan"
    agenda-group "potential-wines"
    salience 10
    when
        $st: Wine(wineName == "Super tuscan");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Merlot" || grapeName == "Cabernet Sauvignon" || grapeName == "Sangiovese"
            || grapeName == "Syrah" || grapeName == "Cabernet Franc")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($st);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Amarone della valpolicella"
    agenda-group "potential-wines"
    salience 10
    when
        $amarone: Wine(wineName == "Amarone della valpolicella");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Corvina" || grapeName == "Molinara" || grapeName == "Rondinella")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($amarone);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Rioja"
    agenda-group "potential-wines"
    salience 10
    when
        $rioja: Wine(wineName == "Rioja");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Tempranillo" || grapeName == "Mazuelo" || grapeName == "Gracino" || grapeName == "Maturana Tinta")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($rioja);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential White rioja"
    agenda-group "potential-wines"
    salience 10
    when
        $wrioja: Wine(wineName == "White rioja");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Viura" || grapeName == "Malvasia" || grapeName == "Verdejo" || grapeName == "Garnacha Blanca")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($wrioja);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Priorat"
    agenda-group "potential-wines"
    salience 10
    when
        $priorat: Wine(wineName == "Priorat");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Grenache" || grapeName == "Syrah" || grapeName == "Carignan" || grapeName == "Cabernet Sauvignon"
            || grapeName == "Merlot")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($priorat);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Meritage"
    agenda-group "potential-wines"
    salience 10
    when
        $meritage: Wine(wineName == "Meritage");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Cabernet Sauvignon" || grapeName == "Merlot" || grapeName == "Cabernet Franc" ||
            grapeName == "Petit Verdot" || grapeName == "Malbec" || grapeName == "Carmenere")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($meritage);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Port"
    agenda-group "potential-wines"
    salience 10
    when
        $port: Wine(wineName == "Port");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Touriga Nacional" || grapeName == "Touriga Franca" || grapeName == "Tinta Roriz" ||
            grapeName == "Tinto Cao" || grapeName == "Tinta Barroca")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($port);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Provence rose"
    agenda-group "potential-wines"
    salience 10
    when
        $rose: Wine(wineName == "Provence rose");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Cinsault" || grapeName == "Grenache" || grapeName == "Syrah" || grapeName == "Rolle")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($rose);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Champagne"
    agenda-group "potential-wines"
    salience 10
    when
        $champ: Wine(wineName == "Champagne");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Chardonnay" || grapeName == "Pinot Meunier" || grapeName == "Pinot Noir")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($champ);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

rule "Potential Cava"
    agenda-group "potential-wines"
    salience 10
    when
        $cava: Wine(wineName == "Cava");
        $pw: PotentialWinesDTO();
        $gl: GrapeList($grapeList: grapeLists);
        $n: Number(intValue >= 1) from accumulate (
            Grape(grapeName == "Macabeo" || grapeName == "Parellada" || grapeName == "Xarello" || grapeName == "Chardonnay")
            from $grapeList,
            init(int count = 0;),
            action(count += 1;),
            result(count)
        )
    then
        MissingGrapesDTO missingGrapesDTO = new MissingGrapesDTO();
        WineDTO wineDTO = new WineDTO($cava);
        missingGrapesDTO.setWineDTO(wineDTO);
        $pw.getMissingGrapesDTOS().add(missingGrapesDTO);
        insert(wineDTO);
        insert(missingGrapesDTO);
end

// IF GRAPE IS NOT IN SOME WINE THAT IS POTENTIAL IT MUST BE ADDED

rule "Needed Grenache for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $grenache: Grape(grapeName == "Grenache")
        $missing: Grape(grapeName == "Grenache", $grapeList not contains $grenache);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($grenache));
end

rule "Needed Grenache for Potential Red rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $grenache: Grape(grapeName == "Grenache")
        $missing: Grape(grapeName == "Grenache", $grapeList not contains $grenache);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($grenache));
end

rule "Needed Grenache for Potential Priorat"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Priorat")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $grenache: Grape(grapeName == "Grenache")
        $missing: Grape(grapeName == "Grenache", $grapeList not contains $grenache);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($grenache));
end

rule "Needed Grenache for Potential Provence rose"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Provence rose")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $grenache: Grape(grapeName == "Grenache")
        $missing: Grape(grapeName == "Grenache", $grapeList not contains $grenache);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($grenache));
end

rule "Needed Syrah for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $syrah: Grape(grapeName == "Syrah")
        $missing: Grape(grapeName == "Syrah", $grapeList not contains $syrah);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($syrah));
end

rule "Needed Syrah for Potential Red rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $syrah: Grape(grapeName == "Syrah")
        $missing: Grape(grapeName == "Syrah", $grapeList not contains $syrah);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($syrah));
end

rule "Needed Syrah for Potential Super tuscan"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Super tuscan")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $syrah: Grape(grapeName == "Syrah")
        $missing: Grape(grapeName == "Syrah", $grapeList not contains $syrah);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($syrah));
end

rule "Needed Syrah for Potential Priorat"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Priorat")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $syrah: Grape(grapeName == "Syrah")
        $missing: Grape(grapeName == "Syrah", $grapeList not contains $syrah);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($syrah));
end

rule "Needed Syrah for Potential Provence rose"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Provence rose")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $syrah: Grape(grapeName == "Syrah")
        $missing: Grape(grapeName == "Syrah", $grapeList not contains $syrah);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($syrah));
end

rule "Needed Mourvedre for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $mourvedre: Grape(grapeName == "Mourvedre")
        $missing: Grape(grapeName == "Mourvedre", $grapeList not contains $mourvedre);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($mourvedre));
end

rule "Needed Mourvedre for Potential Red rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $mourvedre: Grape(grapeName == "Mourvedre")
        $missing: Grape(grapeName == "Mourvedre", $grapeList not contains $mourvedre);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($mourvedre));
end

rule "Needed Bourboulenc for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $bourboulenc: Grape(grapeName == "Bourboulenc")
        $missing: Grape(grapeName == "Bourboulenc", $grapeList not contains $bourboulenc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($bourboulenc));
end

rule "Needed Bourboulenc for Potential White rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $bourboulenc: Grape(grapeName == "Bourboulenc")
        $missing: Grape(grapeName == "Bourboulenc", $grapeList not contains $bourboulenc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($bourboulenc));
end

rule "Needed Cinsault for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cinsaulte: Grape(grapeName == "Cinsault")
        $missing: Grape(grapeName == "Cinsault", $grapeList not contains $cinsaulte);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cinsaulte));
end

rule "Needed Cinsault for Potential Provence rose"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Provence rose")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cinsaulte: Grape(grapeName == "Cinsault")
        $missing: Grape(grapeName == "Cinsault", $grapeList not contains $cinsaulte);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cinsaulte));
end

rule "Needed Clairette Blanche for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $blanche: Grape(grapeName == "Clairette Blanche")
        $missing: Grape(grapeName == "Clairette Blanche", $grapeList not contains $blanche);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($blanche));
end

rule "Needed Counoise for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $counoise: Grape(grapeName == "Counoise")
        $missing: Grape(grapeName == "Counoise", $grapeList not contains $counoise);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($counoise));
end

rule "Needed Grenache Blanc for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $grenache: Grape(grapeName == "Grenache Blanc")
        $missing: Grape(grapeName == "Grenache Blanc", $grapeList not contains $grenache);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($grenache));
end

rule "Needed Grenache Blanc for Potential White rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $grenache: Grape(grapeName == "Grenache Blanc")
        $missing: Grape(grapeName == "Grenache Blanc", $grapeList not contains $grenache);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($grenache));
end

rule "Needed Muscardin for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $muscardin: Grape(grapeName == "Muscardin")
        $missing: Grape(grapeName == "Muscardin", $grapeList not contains $muscardin);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($muscardin));
end

rule "Needed Picardan for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $picardan: Grape(grapeName == "Picardan")
        $missing: Grape(grapeName == "Picardan", $grapeList not contains $picardan);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($picardan));
end

rule "Needed Piquepoul Blanc for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $piquepoul: Grape(grapeName == "Piquepoul Blanc")
        $missing: Grape(grapeName == "Piquepoul Blanc", $grapeList not contains $piquepoul);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($piquepoul));
end

rule "Needed Roussanne for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $roussanne: Grape(grapeName == "Roussanne")
        $missing: Grape(grapeName == "Roussanne", $grapeList not contains $roussanne);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($roussanne));
end

rule "Needed Roussanne for Potential White rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $roussanne: Grape(grapeName == "Roussanne")
        $missing: Grape(grapeName == "Roussanne", $grapeList not contains $roussanne);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($roussanne));
end

rule "Needed Terret Noir for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $terret: Grape(grapeName == "Terret Noir")
        $missing: Grape(grapeName == "Terret Noir", $grapeList not contains $terret);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($terret));
end

rule "Needed Vaccarese for Potential Chateauneuf-du-pape"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chateauneuf-du-pape")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $vaccarese: Grape(grapeName == "Vaccarese")
        $missing: Grape(grapeName == "Vaccarese", $grapeList not contains $vaccarese);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($vaccarese));
end

rule "Needed Merlot for Potential Red bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $merlot: Grape(grapeName == "Merlot")
        $missing: Grape(grapeName == "Merlot", $grapeList not contains $merlot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($merlot));
end

rule "Needed Merlot for Potential Super tuscan"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Super tuscan")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $merlot: Grape(grapeName == "Merlot")
        $missing: Grape(grapeName == "Merlot", $grapeList not contains $merlot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($merlot));
end

rule "Needed Merlot for Potential Priorat"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Priorat")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $merlot: Grape(grapeName == "Merlot")
        $missing: Grape(grapeName == "Merlot", $grapeList not contains $merlot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($merlot));
end

rule "Needed Merlot for Potential Meritage"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Meritage")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $merlot: Grape(grapeName == "Merlot")
        $missing: Grape(grapeName == "Merlot", $grapeList not contains $merlot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($merlot));
end

rule "Needed Cabernet Sauvignon for Potential Red bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cabernet: Grape(grapeName == "Cabernet Sauvignon")
        $missing: Grape(grapeName == "Cabernet Sauvignon", $grapeList not contains $cabernet);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cabernet));
end

rule "Needed Cabernet Sauvignon for Potential Chianti"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chianti")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cabernet: Grape(grapeName == "Cabernet Sauvignon")
        $missing: Grape(grapeName == "Cabernet Sauvignon", $grapeList not contains $cabernet);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cabernet));
end

rule "Needed Cabernet Sauvignon for Potential Super tuscan"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Super tuscan")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cabernet: Grape(grapeName == "Cabernet Sauvignon")
        $missing: Grape(grapeName == "Cabernet Sauvignon", $grapeList not contains $cabernet);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cabernet));
end

rule "Needed Cabernet Sauvignon for Potential Priorat"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Priorat")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cabernet: Grape(grapeName == "Cabernet Sauvignon")
        $missing: Grape(grapeName == "Cabernet Sauvignon", $grapeList not contains $cabernet);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cabernet));
end

rule "Needed Cabernet Sauvignon for Potential Meritage"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Meritage")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $cabernet: Grape(grapeName == "Cabernet Sauvignon")
        $missing: Grape(grapeName == "Cabernet Sauvignon", $grapeList not contains $cabernet);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($cabernet));
end

rule "Needed Cabernet Franc for Potential Red bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $franc: Grape(grapeName == "Cabernet Franc")
        $missing: Grape(grapeName == "Cabernet Franc", $grapeList not contains $franc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($franc));
end

rule "Needed Cabernet Franc for Potential Chianti"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chianti")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $franc: Grape(grapeName == "Cabernet Franc")
        $missing: Grape(grapeName == "Cabernet Franc", $grapeList not contains $franc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($franc));
end

rule "Needed Cabernet Franc for Potential Super tuscan"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Super tuscan")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $franc: Grape(grapeName == "Cabernet Franc")
        $missing: Grape(grapeName == "Cabernet Franc", $grapeList not contains $franc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($franc));
end

rule "Needed Sangiovese for Potential Super tuscan"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Super tuscan")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $sang: Grape(grapeName == "Sangiovese")
        $missing: Grape(grapeName == "Sangiovese", $grapeList not contains $sang);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($sang));
end

rule "Needed Cabernet Franc for Potential Meritage"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Meritage")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $franc: Grape(grapeName == "Cabernet Franc")
        $missing: Grape(grapeName == "Cabernet Franc", $grapeList not contains $franc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($franc));
end

rule "Needed Petit Verdot for Potential Red bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $petit: Grape(grapeName == "Petit Verdot")
        $missing: Grape(grapeName == "Petit Verdot", $grapeList not contains $petit);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($petit));
end

rule "Needed Petit Verdot for Potential Meritage"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Meritage")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $petit: Grape(grapeName == "Petit Verdot")
        $missing: Grape(grapeName == "Petit Verdot", $grapeList not contains $petit);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($petit));
end

rule "Needed Malbec for Potential Red bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $malbec: Grape(grapeName == "Malbec")
        $missing: Grape(grapeName == "Malbec", $grapeList not contains $malbec);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($malbec));
end

rule "Needed Malbec for Potential Meritage"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Meritage")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $malbec: Grape(grapeName == "Malbec")
        $missing: Grape(grapeName == "Malbec", $grapeList not contains $malbec);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($malbec));
end

rule "Needed Semillon for White bordeaux "
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $semillon: Grape(grapeName == "Semillon")
        $missing: Grape(grapeName == "Semillon", $grapeList not contains $semillon);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($semillon));
end

rule "Needed Sauvignon Blanc for White bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $blanc: Grape(grapeName == "Sauvignon Blanc")
        $missing: Grape(grapeName == "Sauvignon Blanc", $grapeList not contains $blanc);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($blanc));
end

rule "Needed Muscadelle for White bordeaux"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White bordeaux")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $muscadelle: Grape(grapeName == "Muscadelle")
        $missing: Grape(grapeName == "Muscadelle", $grapeList not contains $muscadelle);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($muscadelle));
end

rule "Needed Pinot Noir for Red bourgogne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bourgogne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $pinot: Grape(grapeName == "Pinot Noir")
        $missing: Grape(grapeName == "Pinot Noir", $grapeList not contains $pinot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($pinot));
end

rule "Needed Pinot Noir for Champagne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Champagne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $pinot: Grape(grapeName == "Pinot Noir")
        $missing: Grape(grapeName == "Pinot Noir", $grapeList not contains $pinot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($pinot));
end

rule "Needed Gamay for Red bourgogne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Red bourgogne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $gamay: Grape(grapeName == "Gamay")
        $missing: Grape(grapeName == "Gamay", $grapeList not contains $gamay);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($gamay));
end

rule "Needed Chardonnay for White bourgogne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White bourgogne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $chardonnay: Grape(grapeName == "Chardonnay")
        $missing: Grape(grapeName == "Chardonnay", $grapeList not contains $chardonnay);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($chardonnay));
end

rule "Needed Chardonnay for Soave"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Soave")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $chardonnay: Grape(grapeName == "Chardonnay")
        $missing: Grape(grapeName == "Chardonnay", $grapeList not contains $chardonnay);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($chardonnay));
end

rule "Needed Chardonnay for Champagne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Champagne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $chardonnay: Grape(grapeName == "Chardonnay")
        $missing: Grape(grapeName == "Chardonnay", $grapeList not contains $chardonnay);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($chardonnay));
end

rule "Needed Chardonnay for Cava"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Cava")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $chardonnay: Grape(grapeName == "Chardonnay")
        $missing: Grape(grapeName == "Chardonnay", $grapeList not contains $chardonnay);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($chardonnay));
end

rule "Needed Aligote for White bourgogne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White bourgogne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $aligote: Grape(grapeName == "Aligote")
        $missing: Grape(grapeName == "Aligote", $grapeList not contains $aligote);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($aligote));
end

rule "Needed Marsanne for White rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $marsanne: Grape(grapeName == "Marsanne")
        $missing: Grape(grapeName == "Marsanne", $grapeList not contains $marsanne);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($marsanne));
end

rule "Needed Viognier for White rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $viognier: Grape(grapeName == "Viognier")
        $missing: Grape(grapeName == "Viognier", $grapeList not contains $viognier);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($viognier));
end

rule "Needed Clairette for White rhone"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rhone")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $clairette: Grape(grapeName == "Clairette")
        $missing: Grape(grapeName == "Clairette", $grapeList not contains $clairette);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($clairette));
end

rule "Needed Garganega for Soave"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Soave")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $garganega: Grape(grapeName == "Garganega")
        $missing: Grape(grapeName == "Garganega", $grapeList not contains $garganega);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($garganega));
end

rule "Needed Pinot Blanc for Soave"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Soave")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $pinot: Grape(grapeName == "Pinot Blanc")
        $missing: Grape(grapeName == "Pinot Blanc", $grapeList not contains $pinot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($pinot));
end

rule "Needed Sangiovese for Chianti"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Chianti")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $sangiovese: Grape(grapeName == "Sangiovese")
        $missing: Grape(grapeName == "Sangiovese", $grapeList not contains $sangiovese);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($sangiovese));
end

rule "Needed Corvina for Amarone della valpolicella"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Amarone della valpolicella")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $corvina: Grape(grapeName == "Corvina")
        $missing: Grape(grapeName == "Corvina", $grapeList not contains $corvina);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($corvina));
end

rule "Needed Molinara for Amarone della valpolicella"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Amarone della valpolicella")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $molinara: Grape(grapeName == "Molinara")
        $missing: Grape(grapeName == "Molinara", $grapeList not contains $molinara);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($molinara));
end

rule "Needed Rondinella for Amarone della valpolicella"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Amarone della valpolicella")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $rondinella: Grape(grapeName == "Rondinella")
        $missing: Grape(grapeName == "Rondinella", $grapeList not contains $rondinella);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($rondinella));
end

rule "Needed Tempranillo for Rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $tempranillo: Grape(grapeName == "Tempranillo")
        $missing: Grape(grapeName == "Tempranillo", $grapeList not contains $tempranillo);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($tempranillo));
end

rule "Needed Mazuelo for Rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $mazuelo: Grape(grapeName == "Mazuelo")
        $missing: Grape(grapeName == "Mazuelo", $grapeList not contains $mazuelo);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($mazuelo));
end

rule "Needed Gracino for Rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $gracino: Grape(grapeName == "Gracino")
        $missing: Grape(grapeName == "Gracino", $grapeList not contains $gracino);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($gracino));
end

rule "Needed Maturana Tinta for Rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $maturana: Grape(grapeName == "Maturana Tinta")
        $missing: Grape(grapeName == "Maturana Tinta", $grapeList not contains $maturana);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($maturana));
end

rule "Needed Viura for White rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $viura: Grape(grapeName == "Viura")
        $missing: Grape(grapeName == "Viura", $grapeList not contains $viura);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($viura));
end

rule "Needed Malvasia for White rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $malvasia: Grape(grapeName == "Malvasia")
        $missing: Grape(grapeName == "Malvasia", $grapeList not contains $malvasia);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($malvasia));
end

rule "Needed Verdejo for White rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $verdejo: Grape(grapeName == "Verdejo")
        $missing: Grape(grapeName == "Verdejo", $grapeList not contains $verdejo);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($verdejo));
end

rule "Needed Garnacha Blanca for White rioja"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "White rioja")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $garnacha: Grape(grapeName == "Garnacha Blanca")
        $missing: Grape(grapeName == "Garnacha Blanca", $grapeList not contains $garnacha);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($garnacha));
end

rule "Needed Carignan for Priorat"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Priorat")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $carignan: Grape(grapeName == "Carignan")
        $missing: Grape(grapeName == "Carignan", $grapeList not contains $carignan);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($carignan));
end

rule "Needed Carmenere for Meritage"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Meritage")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $carmenere: Grape(grapeName == "Carmenere")
        $missing: Grape(grapeName == "Carmenere", $grapeList not contains $carmenere);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($carmenere));
end

rule "Needed Touriga Nacional for Port"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Port")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $touriga: Grape(grapeName == "Touriga Nacional")
        $missing: Grape(grapeName == "Touriga Nacional", $grapeList not contains $touriga);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($touriga));
end

rule "Needed Touriga Franca for Port"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Port")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $touriga: Grape(grapeName == "Touriga Franca")
        $missing: Grape(grapeName == "Touriga Franca", $grapeList not contains $touriga);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($touriga));
end

rule "Needed Tinta Roriz for Port"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Port")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $tinta: Grape(grapeName == "Tinta Roriz")
        $missing: Grape(grapeName == "Tinta Roriz", $grapeList not contains $tinta);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($tinta));
end

rule "Needed Tinto Cao for Port"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Port")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $tinto: Grape(grapeName == "Tinto Cao")
        $missing: Grape(grapeName == "Tinto Cao", $grapeList not contains $tinto);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($tinto));
end

rule "Needed Tinta Barroca for Port"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Port")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $tinta: Grape(grapeName == "Tinta Barroca")
        $missing: Grape(grapeName == "Tinta Barroca", $grapeList not contains $tinta);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($tinta));
end

rule "Needed Rolle for Provence rose"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Provence rose")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $rolle: Grape(grapeName == "Rolle")
        $missing: Grape(grapeName == "Rolle", $grapeList not contains $rolle);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($rolle));
end

rule "Needed Pinot Meunier for Champagne"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Champagne")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $pinot: Grape(grapeName == "Pinot Meunier")
        $missing: Grape(grapeName == "Pinot Meunier", $grapeList not contains $pinot);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($pinot));
end

rule "Needed Macabeo for Cava"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Cava")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $macabeo: Grape(grapeName == "Macabeo")
        $missing: Grape(grapeName == "Macabeo", $grapeList not contains $macabeo);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($macabeo));
end

rule "Needed Parellada for Cava"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Cava")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $parellada: Grape(grapeName == "Parellada")
        $missing: Grape(grapeName == "Parellada", $grapeList not contains $parellada);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($parellada));
end

rule "Needed Xarello for Cava"
    agenda-group "potential-wines"
    salience -100
    when
        $wdto: WineDTO(wineName == "Cava")
        $potentialWine: MissingGrapesDTO(wineDTO == $wdto);
        $gl: GrapeList($grapeList: grapeLists);
        $xarello: Grape(grapeName == "Xarello")
        $missing: Grape(grapeName == "Xarello", $grapeList not contains $xarello);
    then
        $potentialWine.getGrapeDTOS().add(new GrapeDTO($xarello));
end